{"version":3,"sources":["assets/fonts/fonts.js","components/common/FormsControls/FormsControls.jsx","utils/validators/validators.js","../node_modules/@material-ui/icons/Send.js","components/Dialogs/DialogItem/DialogsItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/AddMessageForm.jsx","components/Dialogs/Dialogs.jsx","hoc/withAuthRedirect.js","components/Dialogs/DialogsContainer.jsx"],"names":["text_22","fontFamily","fontSize","lineHeight","letterSpasing","heading_30","FormControl","input","meta","props","child","hasError","touched","error","children","Error","Textarea","restProps","id","variant","styled","div","ErrorRedColor","required","value","maxLengthCreator","maxLength","length","emailRequired","test","_interopRequireDefault","require","_interopRequireWildcard","Object","defineProperty","exports","default","React","_default","createElement","d","DialogItem","avatarURL","name","ListItem","button","StyledNavlink","to","StyledAvatar","src","TextName","img","NavLink","NavLinkDarkGreyColor","Message","message","MessageBlock","textColorBlue","reduxForm","form","handleSubmit","reset","addMessage","onSubmit","values","newMessageBody","NewMessageBlock","Field","component","label","placeholder","validate","Button","type","endIcon","color","Dialogs","dialogsPage","state","dialogsElements","dialogs","map","dialog","messagesElements","messages","DialogsBlock","ItemBlock","AreaBlock","MessagesBlock","textColorLightBlue","mapStateToPropsForRedirect","isAuth","auth","mapDispatchToProps","compose","connect","Component"],"mappings":"kGAAA,oEAAO,IAAMA,EAAU,CACrBC,WAAY,aACZC,SAAU,OACVC,WAAY,OACZC,cAAe,OAGJC,EAAa,CACxBJ,WAAY,WACZC,SAAU,OACVC,WAAY,OACZC,cAAe,Q,wICNXE,EAAc,SAAC,GAAqC,EAAnCC,MAAoC,IAA7BC,EAA4B,EAA5BA,KAAgBC,GAAY,EAAtBC,MAAsB,yCAClDC,EAAWH,EAAKI,SAAWJ,EAAKK,MACtC,OACE,qCACE,8BAAMJ,EAAMK,WACZ,cAACC,EAAD,UAAQJ,GAAY,+BAAOH,EAAKK,cAKzBG,EAAW,SAACP,GAAW,IAC1BF,EAAqCE,EAArCF,MAAuBU,GAAcR,EAA9BD,KAA8BC,EAAxBC,MADY,YACYD,EADZ,2BAEjC,OACE,cAACH,EAAD,2BAAiBG,GAAjB,aACE,cAAC,IAAD,uCACMF,GACAU,GAFN,IAGEC,GAAG,iBACHC,QAAQ,kBAeVJ,EAAQK,IAAOC,IAAV,0CACAC,M,iCCvCX,sGAAO,IAAMC,EAAW,SAACC,GACvB,IAAKA,EAAO,MAAO,qBAGRC,EAAmB,SAACC,GAAD,OAAe,SAACF,GAAD,OAC7CA,GAASA,EAAMG,OAASD,EAAxB,wBACqBA,EADrB,YAEI,OAEOE,EAAgB,SAACJ,GAE5B,IADc,6DACDK,KAAKL,GAChB,MAAO,0B,iCCVX,IAAIM,EAAyBC,EAAQ,KAEjCC,EAA0BD,EAAQ,KAEtCE,OAAOC,eAAeC,EAAS,aAAc,CAC3CX,OAAO,IAETW,EAAQC,aAAU,EAElB,IAAIC,EAAQL,EAAwBD,EAAQ,IAIxCO,GAAW,EAFMR,EAAuBC,EAAQ,MAElBK,SAAuBC,EAAME,cAAc,OAAQ,CACnFC,EAAG,0CACD,QAEJL,EAAQC,QAAUE,G,8HCFHG,EAXI,SAAC,GAAD,IAAGC,EAAH,EAAGA,UAAWC,EAAd,EAAcA,KAAMzB,EAApB,EAAoBA,GAApB,OACjB,mCACE,cAAC0B,EAAA,EAAD,CAAUC,QAAM,EAAhB,SACE,eAACC,EAAD,CAAeC,GAAE,mBAAc7B,GAA/B,UACE,cAAC8B,EAAD,CAAcC,IAAKP,IACnB,cAACQ,EAAD,UAAWP,YAQbK,EAAe5B,IAAO+B,IAAV,qFAMZD,EAAW9B,IAAOC,IAAV,mDAGRyB,EAAgB1B,YAAOgC,IAAPhC,CAAH,sIAIRiC,K,SCvBIC,EAJC,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACjB,OAAO,cAACC,EAAD,UAAeD,KAKlBC,EAAepC,IAAOC,IAAV,kDACPoC,IACPzD,K,+DC0BW0D,cAAU,CACvBC,KAAM,wBADOD,EA/BQ,SAAC,GAAyC,IAAvCE,EAAsC,EAAtCA,aAAcC,EAAwB,EAAxBA,MAAOC,EAAiB,EAAjBA,WAM7C,OACE,uBAAMC,SAAUH,GANI,SAACI,GACrBF,EAAWE,EAAOC,gBAClBJ,OAIA,UACE,cAACK,EAAD,UACE,cAACC,EAAA,EAAD,CACEC,UAAWpD,IACX2B,KAAK,iBACL0B,MAAM,cACNC,YAAY,qBACZC,SAAU,CAAChD,SAGf,8BACE,cAACiD,EAAA,EAAD,CACEC,KAAK,SACLC,QAAS,cAAC,IAAD,IACTvD,QAAQ,YACRwD,MAAM,UAJR,0BAiBFT,EAAkB9C,IAAOC,IAAV,uDCRNuD,EA5BC,SAAC,GAAiC,IAA/BC,EAA8B,EAA9BA,YAAaf,EAAiB,EAAjBA,WACxBgB,EAAQD,EAERE,EAAkBD,EAAME,QAAQC,KAAI,SAACC,GAAD,OACxC,cAAC,EAAD,CACEvC,KAAMuC,EAAOvC,KAEbD,UAAWwC,EAAOxC,UAClBxB,GAAIgE,EAAOhE,IAFNgE,EAAOhE,OAKViE,EAAmBL,EAAMM,SAASH,KAAI,SAAC1B,GAAD,OAC1C,cAAC,EAAD,CAASA,QAASA,EAAQA,QAA0BrC,GAAIqC,EAAQrC,IAAxBqC,EAAQrC,OAGlD,OACE,eAACmE,EAAD,WACE,cAACC,EAAD,UAAYP,IACZ,cAACQ,EAAD,UACE,eAACC,EAAD,WACE,8BAAML,IACN,cAAC,EAAD,CAAgBrB,WAAYA,aAShCuB,EAAejE,IAAOC,IAAV,kFAIZiE,EAAYlE,IAAOC,IAAV,8CAITkE,EAAYnE,IAAOC,IAAV,wFAGOoE,KAEhBD,EAAgBpE,IAAOC,IAAV,8C,uBC9CbqE,EAA6B,SAACZ,GAAD,MAAY,CAC7Ca,OAAQb,EAAMc,KAAKD,S,QCKfE,EAAqB,CACzB/B,gBAGagC,sBACbC,aATsB,SAACjB,GAAD,MAAY,CAClCD,YAAaC,EAAMD,eAQMgB,IDPK,SAACG,GAW/B,OAHuCD,YAAQL,EAARK,EAPb,SAACtF,GACzB,OAAIA,EAAMkF,OACD,cAACK,EAAD,eAAevF,IAEf,cAAC,IAAD,CAAUsC,GAAI,gBCCZ+C,CAGblB","file":"static/js/5.b991f303.chunk.js","sourcesContent":["export const text_22 = {\r\n  fontFamily: \"fontMedium\",\r\n  fontSize: \"22px\",\r\n  lineHeight: \"32px\",\r\n  letterSpasing: \"0px\",\r\n};\r\n\r\nexport const heading_30 = {\r\n  fontFamily: \"fontBold\",\r\n  fontSize: \"30px\",\r\n  lineHeight: \"36px\",\r\n  letterSpasing: \"0px\",\r\n};\r\n","import { TextField } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { ErrorRedColor } from \"../../../assets/colors/colors\";\r\n\r\nconst FormControl = ({ input, meta, child, ...props }) => {\r\n  const hasError = meta.touched && meta.error;\r\n  return (\r\n    <>\r\n      <div>{props.children}</div>\r\n      <Error>{hasError && <span>{meta.error}</span>}</Error>\r\n    </>\r\n  );\r\n};\r\n\r\nexport const Textarea = (props) => {\r\n  const { input, meta, child, ...restProps } = props;\r\n  return (\r\n    <FormControl {...props}>\r\n      <TextField\r\n        {...input}\r\n        {...restProps}\r\n        id=\"outlined-basic\"\r\n        variant=\"outlined\"\r\n      />\r\n    </FormControl>\r\n  );\r\n};\r\n\r\nexport const Input = (props) => {\r\n  const { input, meta, child, ...restProps } = props;\r\n  return (\r\n    <FormControl {...props}>\r\n      <input {...input} {...restProps} />\r\n    </FormControl>\r\n  );\r\n};\r\n\r\nconst Error = styled.div`\r\n  color: ${ErrorRedColor};\r\n`;\r\n","export const required = (value) => {\r\n  if (!value) return \"Field is required\";\r\n};\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) =>\r\n  value && value.length > maxLength\r\n    ? `Max length is ${maxLength} symbols`\r\n    : null;\r\n\r\nexport const emailRequired = (value) => {\r\n  let pattern = /^([a-z0-9_\\.-])+[@][a-z0-9-]+\\.([a-z]{2,4}\\.)?[a-z]{2,4}$/i;\r\n  if (!pattern.test(value)) {\r\n    return \"invalid email address\";\r\n  }\r\n};\r\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M2.01 21L23 12 2.01 3 2 10l15 2-15 2z\"\n}), 'Send');\n\nexports.default = _default;","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport { NavLinkDarkGreyColor } from \"../../../assets/colors/colors\";\r\nimport { ListItem } from \"@material-ui/core\";\r\n\r\nconst DialogItem = ({ avatarURL, name, id }) => (\r\n  <>\r\n    <ListItem button>\r\n      <StyledNavlink to={`/dialogs/${id}`}>\r\n        <StyledAvatar src={avatarURL} />\r\n        <TextName>{name}</TextName>\r\n      </StyledNavlink>\r\n    </ListItem>\r\n  </>\r\n);\r\n\r\nexport default DialogItem;\r\n\r\nconst StyledAvatar = styled.img`\r\n  width: 50px;\r\n  height: 50px;\r\n  border-radius: 30px;\r\n`;\r\n\r\nconst TextName = styled.div`\r\n  padding-left: 10px;\r\n`;\r\nconst StyledNavlink = styled(NavLink)`\r\n  display: flex;\r\n  align-items: center;\r\n  flex-direction: row;\r\n  color: ${NavLinkDarkGreyColor};\r\n  text-decoration: none;\r\n`;\r\n","import React from \"react\";\r\nimport { textColorBlue } from \"../../../assets/colors/colors\";\r\nimport { text_22 } from \"../../../assets/fonts/fonts\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Message = ({ message }) => {\r\n  return <MessageBlock>{message}</MessageBlock>;\r\n};\r\n\r\nexport default Message;\r\n\r\nconst MessageBlock = styled.div`\r\n  color: ${textColorBlue};\r\n  ${text_22};\r\n`;\r\n","import React from \"react\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport SendIcon from \"@material-ui/icons/Send\";\r\nimport styled from \"styled-components\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { Textarea } from \"../common/FormsControls/FormsControls\";\r\nimport { required } from \"../../utils/validators/validators\";\r\n\r\nconst AddMessageForm = ({ handleSubmit, reset, addMessage }) => {\r\n  const addNewMessage = (values) => {\r\n    addMessage(values.newMessageBody);\r\n    reset();\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit(addNewMessage)}>\r\n      <NewMessageBlock>\r\n        <Field\r\n          component={Textarea}\r\n          name=\"newMessageBody\"\r\n          label=\"New message\"\r\n          placeholder=\"Enter your message\"\r\n          validate={[required]}\r\n        />\r\n      </NewMessageBlock>\r\n      <div>\r\n        <Button\r\n          type=\"submit\"\r\n          endIcon={<SendIcon />}\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n        >\r\n          Send\r\n        </Button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default reduxForm({\r\n  form: \"dialogAddMessageForm\",\r\n})(AddMessageForm);\r\n\r\nconst NewMessageBlock = styled.div`\r\n  padding: 50px 0 10px 0;\r\n`;\r\n","import React from \"react\";\r\nimport DialogItem from \"./DialogItem/DialogsItem\";\r\nimport Message from \"./Message/Message\";\r\nimport styled from \"styled-components\";\r\nimport { textColorLightBlue } from \"../../assets/colors/colors\";\r\nimport AddMessageForm from \"./AddMessageForm\";\r\n\r\nconst Dialogs = ({ dialogsPage, addMessage }) => {\r\n  const state = dialogsPage;\r\n\r\n  const dialogsElements = state.dialogs.map((dialog) => (\r\n    <DialogItem\r\n      name={dialog.name}\r\n      key={dialog.id}\r\n      avatarURL={dialog.avatarURL}\r\n      id={dialog.id}\r\n    />\r\n  ));\r\n  const messagesElements = state.messages.map((message) => (\r\n    <Message message={message.message} key={message.id} id={message.id} />\r\n  ));\r\n\r\n  return (\r\n    <DialogsBlock>\r\n      <ItemBlock>{dialogsElements}</ItemBlock>\r\n      <AreaBlock>\r\n        <MessagesBlock>\r\n          <div>{messagesElements}</div>\r\n          <AddMessageForm addMessage={addMessage} />\r\n        </MessagesBlock>\r\n      </AreaBlock>\r\n    </DialogsBlock>\r\n  );\r\n};\r\n\r\nexport default Dialogs;\r\n\r\nconst DialogsBlock = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 2fr 10fr;\r\n`;\r\nconst ItemBlock = styled.div`\r\n  padding: 10px;\r\n`;\r\n\r\nconst AreaBlock = styled.div`\r\n  margin: 10px;\r\n  height: 500px;\r\n  background-color: ${textColorLightBlue};\r\n`;\r\nconst MessagesBlock = styled.div`\r\n  padding: 10px;\r\n`;\r\n","import React from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst mapStateToPropsForRedirect = (state) => ({\r\n  isAuth: state.auth.isAuth,\r\n});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n  const RedirectComponent = (props) => {\r\n    if (props.isAuth) {\r\n      return <Component {...props} />;\r\n    } else {\r\n      return <Redirect to={\"/login\"} />;\r\n    }\r\n  };\r\n  const ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(\r\n    RedirectComponent\r\n  );\r\n  return ConnectedAuthRedirectComponent;\r\n};\r\n","import { addMessage } from \"../../redux/dialogs_reduсer \";\r\nimport Dialogs from \"./Dialogs\";\r\nimport { connect } from \"react-redux\";\r\nimport { withAuthRedirect } from \"../../hoc/withAuthRedirect\";\r\nimport { compose } from \"redux\";\r\n\r\nconst mapStateToProps = (state) => ({\r\n  dialogsPage: state.dialogsPage,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  addMessage,\r\n};\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, mapDispatchToProps),\r\n  withAuthRedirect\r\n)(Dialogs);\r\n"],"sourceRoot":""}